/************************************************************************************************
 * This code was automatically generated by Digital Twin Code Generator tool 0.6.8.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 *
 * Generated Date: 2/19/2020
 ***********************************************************************************************/

#ifndef DIGITALTWIN_SERIALIZER
#define DIGITALTWIN_SERIALIZER

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#include "pnp_schema_types.h"

#ifdef __cplusplus
extern "C"
{
#endif

// Serialize telemetry, reported property and command response data.

bool Deviceinfo_SerializeManufacturerProperty(char * payloadBuffer, int size);

bool Deviceinfo_SerializeModelProperty(char * payloadBuffer, int size);

bool Deviceinfo_SerializeSwVersionProperty(char * payloadBuffer, int size);

bool Deviceinfo_SerializeOsNameProperty(char * payloadBuffer, int size);

bool Deviceinfo_SerializeProcessorArchitectureProperty(char * payloadBuffer, int size);

bool Deviceinfo_SerializeProcessorManufacturerProperty(char * payloadBuffer, int size);

bool Deviceinfo_SerializeTotalStorageProperty(char * payloadBuffer, int size);

bool Deviceinfo_SerializeTotalMemoryProperty(char * payloadBuffer, int size);

bool Sensor_SerializeTempTelemetry(char * payloadBuffer, int size);

bool Sensor_SerializeHumidTelemetry(char * payloadBuffer, int size);

bool Sensor_SerializeLocationTelemetry(char * payloadBuffer, int size);

bool Sensor_SerializeStateProperty(char * payloadBuffer, int size);

bool Sensor_SerializeBlinkCommandResponse(SENSOR_BLINK_blinkResponse* response, char* payloadBuffer, int size);

bool Sensor_SerializeUpdateFirmwareCommandResponse(SENSOR_UPDATEFIRMWARE_updateFirmwareResponse* response, char* payloadBuffer, int size);


// TODO: Deserialize desired property and command request data.
/**
 * @brief Deserialize blink command request with specified buffer.
 *
 * @param request Pointer to the inverval allocated by user.
 * @param pDataBuffer Pointer to the buffer containing data to be serialized.
 * @param size Length of the buffer containing data to be serialized.
 * @return true if successful.
 */
bool Sensor_DeserializeBlinkCommandRequest(long* interval, const unsigned char* pDataBuffer, int size);

/**
 * @brief Deserialize updateFirmware command request with specified buffer.
 *
 * @param request Pointer to the request object allocated by user.
 * @param pDataBuffer Pointer to the buffer containing data to be serialized.
 * @param size Length of the buffer containing data to be serialized.
 * @return true if successful.
 */
bool Sensor_DeserializeUpdateFirmwareCommandRequest(SENSOR_UPDATEFIRMWARE_firmwareRequest* request, const unsigned char* pDataBuffer, int size);


#ifdef __cplusplus
}
#endif

#endif // DIGITALTWIN_SERIALIZER
